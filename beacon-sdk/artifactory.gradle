configurations {
    includeInAar
}

publishing.publications {
    android.libraryVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.outputs.each {
                def outputFile = variant.packageLibraryProvider.get().archiveFile.get().getAsFile()
                def publicationName = outputFile.name.minus('.aar')
                "${publicationName}"(MavenPublication) {

                    //noinspection GroovyAssignabilityCheck
                    artifact outputFile
                    //noinspection GroovyAssignabilityCheck
                    groupId 'ch.allianceswisspass.beaconsdk'
                    //noinspection GroovyAssignabilityCheck
                    artifactId 'beacon-sdk'
                    version '0.3.0'

                    pom.withXml {
                        //noinspection GroovyImplicitNullArgumentCall
                        def dependenciesNode = asNode().appendNode('dependencies')
                        //Iterate over the api dependencies (we don't want the test ones), adding a <dependency> node for each
                        configurations.api.allDependencies.each {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
}

publishing.repositories {
    maven {
        name = 'temp'
        url = "${project.getLayout().getBuildDirectory().asFile.get()}"
    }
}

afterEvaluate {
    assemble.finalizedBy('publishBeacon-sdk-releasePublicationToTempRepository')
    artifactoryPublish {
        dependsOn 'assemble'
        publications('beacon-sdk-release')
    }
}
